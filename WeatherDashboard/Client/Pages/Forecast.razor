@page "/forecast"
@using ViewModels
@using WeatherDashboard.Shared
@inherits ForecastBase

<h1>Three-day Weather Forecasts (&deg;C)</h1>

@if (Forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <SfAutoComplete TValue="string"
                    TItem="LocationResult"
                    Placeholder="e.g. Atlanta"
                    Query="@GetQuery()"
                    @onkeypress="@(e => OnAutoCompleteKeyPressed(e))"
                    @onkeydown="@(e => OnAutoCompleteKeyDown(e))"
                    Width="250px">
        <SfDataManager Url="@GetSearchUrl()"
                       Adaptor="Adaptors.UrlAdaptor"
                       CrossDomain="true">
            <AutoCompleteFieldSettings Value="Name"></AutoCompleteFieldSettings>
        </SfDataManager>
    </SfAutoComplete>
    <SfButton @onclick="OnAddClicked">Add</SfButton>
    <SfGrid DataSource="@Forecasts" AllowSorting="true">
        <GridColumns>
            <GridColumn Field="@nameof(WeatherGridRow.City)">
            </GridColumn>
            <GridColumn Field="@nameof(WeatherGridRow.Today)"
                        AllowSorting="false">
                <Template>
                    @{
                        var forecast = context as WeatherGridRow;
                        <ForecastIcon DailyForecast="forecast.Today"></ForecastIcon>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(WeatherGridRow.Tomorrow)"
                        AllowSorting="false">
                <Template>
                    @{
                        var forecast = context as WeatherGridRow;
                        <ForecastIcon DailyForecast="forecast.Tomorrow"></ForecastIcon>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(WeatherGridRow.ThirdDay)"
                        HeaderText="@DateTime.Today.AddDays(2).ToString("MM/dd")"
                        AllowSorting="false">
                <Template>
                    @{
                        var forecast = context as WeatherGridRow;
                        <ForecastIcon DailyForecast="forecast.ThirdDay"></ForecastIcon>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
}
